<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术思考 on kingdeguo&#39;s blog</title>
    <link>https://www.kingdeguo.com/categories/%E6%8A%80%E6%9C%AF%E6%80%9D%E8%80%83/</link>
    <description>Recent content in 技术思考 on kingdeguo&#39;s blog</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 01 Oct 2025 17:10:00 +0800</lastBuildDate>
    <atom:link href="https://www.kingdeguo.com/categories/%E6%8A%80%E6%9C%AF%E6%80%9D%E8%80%83/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>大模型到底改变了什么？</title>
      <link>https://www.kingdeguo.com/2025/10/01/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%88%B0%E5%BA%95%E6%94%B9%E5%8F%98%E4%BA%86%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 01 Oct 2025 17:10:00 +0800</pubDate>
      <guid>https://www.kingdeguo.com/2025/10/01/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%88%B0%E5%BA%95%E6%94%B9%E5%8F%98%E4%BA%86%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;h1 id=&#34;大模型到底改变了什么&#34;&gt;大模型到底改变了什么？&lt;/h1&gt;&#xA;&lt;p&gt;最近我常常在想一个问题：大模型到底改变了什么？&lt;/p&gt;&#xA;&lt;p&gt;有时候，我觉得它带来的冲击比表面看到的还要大。以前我们做事，总有一种&amp;quot;节奏感&amp;quot;。比如一个方案要几天准备，一个流程要几周走完，一个文档要一个人慢慢写。时间和空间像是一种自然约束，每个人都被它框住。&lt;/p&gt;&#xA;&lt;p&gt;可大模型出现后，很多节奏突然被打乱了。它能在几分钟里生成一份初稿，能同时处理多个任务，能让原本需要排队、等待、反复确认的事情瞬间推进。以前那种&amp;quot;必须花时间消耗&amp;quot;的逻辑，好像被改写了。&lt;/p&gt;&#xA;&lt;p&gt;这让我想起一句话：尼采说&amp;quot;上帝死了&amp;quot;，意味着旧的秩序崩塌，人必须重新面对世界。而大模型的出现，也像是在提醒我们：很多旧的秩序被抹平了，我们得重新去思考。&lt;/p&gt;&#xA;&lt;p&gt;在工作里，我已经真切感受到这种变化。过去，一个项目提案要靠几个人反复讨论、磨合、再定稿；现在，我自己先丢给模型跑一版资料，立刻就能拿到一个方向，再带着成果和大家讨论，节奏完全不同了。过去，写一封正式的邮件要反复斟酌用词；现在，模型能帮我先列一个框架，我只需要根据场景润色。那种&amp;quot;节奏感&amp;quot;，真的被重构了。&lt;/p&gt;&#xA;&lt;p&gt;我有时候甚至会有点震惊：原本我们以为不可替代的流程、不可压缩的时间，现在突然都变得松动了。这让我不得不重新思考：如果效率不再是瓶颈，那我们该怎么定义自己的价值？如果机器能并行处理一切&amp;quot;可量化&amp;quot;的工作，那我们作为人，还能贡献什么？&lt;/p&gt;&#xA;&lt;p&gt;这些问题我现在还没有答案。但我能确定的是，大模型不是在帮我们省点时间这么简单，而是把我们对&amp;quot;时间、空间和工作节奏&amp;quot;的理解彻底翻了一遍。&lt;/p&gt;&#xA;&lt;p&gt;它让我意识到，我们已经站在一个新的门槛上。很多事情，需要我们重新去看，重新去理解。&lt;/p&gt;</description>
    </item>
    <item>
      <title>员工的 AI 与领导的 AI</title>
      <link>https://www.kingdeguo.com/2025/09/19/%E5%91%98%E5%B7%A5%E7%9A%84-ai-%E4%B8%8E%E9%A2%86%E5%AF%BC%E7%9A%84-ai/</link>
      <pubDate>Fri, 19 Sep 2025 19:24:00 +0800</pubDate>
      <guid>https://www.kingdeguo.com/2025/09/19/%E5%91%98%E5%B7%A5%E7%9A%84-ai-%E4%B8%8E%E9%A2%86%E5%AF%BC%E7%9A%84-ai/</guid>
      <description>&lt;h1 id=&#34;员工的-ai-与领导的-ai&#34;&gt;员工的 AI 与领导的 AI&lt;/h1&gt;&#xA;&lt;p&gt;最近朋友聊起他们团队的情况，讲到 AI 的使用方式，我突然有了新的认知——员工用 AI 和领导用 AI，其实完全不是一回事。员工使用 AI，通常是为了提升个人效率——写文章、写代码、整理资料，它像一把放大镜，让每一项工作更精准、更高效。而领导使用 AI，则更多牵涉组织决策和团队管理，影响更深，也更复杂。&lt;/p&gt;&#xA;&lt;p&gt;朋友描述的一个场景让我印象深刻：领导用 AI 生成了一整套项目方案，直接交给团队执行。表面上看似高效，但团队发现很多内容与实际情况脱节，不得不花额外时间拆解和调整。这让我思考，传统管理方式与 AI 的结合并非天然顺畅。过去的管理强调计划、流程和层级，而 AI 的介入放大了决策的速度，也放大了偏差。当领导依赖 AI 生成指令，却忽略了团队实际执行能力时，组织就可能陷入&amp;quot;表面高效、实则低效&amp;quot;的怪圈。&lt;/p&gt;&#xA;&lt;p&gt;员工 AI 与领导 AI 的差异，也折射出组织运作的核心逻辑。员工 AI 是效率的放大器，让个体工作更精准、可控；领导 AI 则是决策的放大器，它放大的是组织的节奏和方向。如果没有对协作模式、沟通机制和执行能力的深入理解，领导 AI 产生的方案往往难以落地。由此可见，新技术的价值不能脱离组织和协作体系，否则效率提升可能只是表面现象。&lt;/p&gt;&#xA;&lt;p&gt;理性看待 AI 的使用显得尤为重要。员工的 AI 应该作为辅助工具，让个体能力得到放大；领导的 AI 应作为决策参考，让组织节奏更稳健。同时，组织需要在传统管理基础上重构协作方式：明确职责边界、保持沟通畅通、调整反馈机制。只有这样，AI 的加持才能真正转化为团队整体价值。AI 不应成为形式化的指标或考核手段，而应成为增强智慧、支持决策和优化协作的工具。&lt;/p&gt;&#xA;&lt;p&gt;最终，我的思考回到一个核心点：员工的 AI 与领导的 AI 虽然不同，但如果能在组织和协作逻辑下有机结合，就能让效率和弹性同时存在，让团队在快速变化中保持方向感和韧性。正如朋友所说的那些具体场景，如果领导和团队都能理解 AI 的边界和价值，技术带来的改变才会真正扎根，而不是浮在表面。&lt;/p&gt;</description>
    </item>
    <item>
      <title>想法是创造，思考是破坏</title>
      <link>https://www.kingdeguo.com/2025/09/11/%E6%83%B3%E6%B3%95%E6%98%AF%E5%88%9B%E9%80%A0%E6%80%9D%E8%80%83%E6%98%AF%E7%A0%B4%E5%9D%8F/</link>
      <pubDate>Thu, 11 Sep 2025 00:00:00 +0800</pubDate>
      <guid>https://www.kingdeguo.com/2025/09/11/%E6%83%B3%E6%B3%95%E6%98%AF%E5%88%9B%E9%80%A0%E6%80%9D%E8%80%83%E6%98%AF%E7%A0%B4%E5%9D%8F/</guid>
      <description>&lt;h1 id=&#34;想法是创造思考是破坏&#34;&gt;想法是创造，思考是破坏&lt;/h1&gt;&#xA;&lt;p&gt;当我最初听到&amp;quot;想法是创造，思考是破坏&amp;quot;时，下意识觉得它有些偏激。思考怎么会是破坏呢？它不是一直以来都被视为理性与保障吗？可越在软件工程里观察，我越发现这种说法并不夸张，甚至直击核心。&lt;/p&gt;&#xA;&lt;p&gt;想法，是一束火花。它让人兴奋，能瞬间点燃团队的激情，带来新的可能：无论是&amp;quot;上微服务&amp;quot;的豪言，还是&amp;quot;重构一整个模块&amp;quot;的冲动，想法让未来似乎变得触手可及。但火花再亮，如果不经过拆解，就可能点燃的是一堆干草——瞬间燃烧，最终只剩一地灰烬。&lt;/p&gt;&#xA;&lt;p&gt;思考，恰恰是那个看似冷酷的&amp;quot;破坏者&amp;quot;。它不带激情，而是拿着锤子，把闪闪发光的创意逐块敲开，逼我们回答最难听的问题：十倍的流量来了，架构是否能扛住？团队翻倍后，流程是否还能运转？未来方向变了，今天的设计还能存活吗？这种拆解确实残酷，它像是不断推倒沙盘上的模型。但也正是这种破坏，才筛掉了华而不实的幻想，留下了真正能经得住时间考验的方案。&lt;/p&gt;&#xA;&lt;p&gt;走到这里，我对&amp;quot;创造&amp;quot;和&amp;quot;破坏&amp;quot;的理解发生了转变。创造，不只是提出一个点子，而是敢于把未来打开，让可能性出现；破坏，也不是真正意义上的摧毁，而是一种净化，把脆弱和虚幻剔除出去。两者并不是对立，而是互为因果：没有创造，破坏就成了空洞的挑剔；没有破坏，创造也会淹没在复杂度与债务中。&lt;/p&gt;&#xA;&lt;p&gt;所以我慢慢明白，创造和破坏其实是一体的。创造让未来展开，给我们勇气去尝试；破坏让幻想收缩，逼我们留下真实能走下去的部分。就像在软件工程里，一个健康的系统不是靠一连串灵感堆出来的，而是靠无数次推倒、重来、取舍之后，才沉淀成可靠的架构。激情与冷静、点子与质疑，本就该交替出现，这样滚动向前，才算是真正的进化。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
